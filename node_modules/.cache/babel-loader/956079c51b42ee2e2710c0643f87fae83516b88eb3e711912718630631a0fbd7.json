{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Route, useNavigate } from \"react-router-dom\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = props => {\n  _s();\n  const navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  function checkUserToken() {\n    const userToken = sessionStorage.getItem('user-token');\n    if (!userToken || userToken === 'undefined') {\n      setIsLoggedIn(false);\n      return navigate('/Login?returnUrl=' + props.returnUrl);\n      // return navigate('/Login');\n    }\n    setIsLoggedIn(true);\n  }\n  useEffect(() => {\n    // alert(props.returnUrl);      \n    checkUserToken();\n  }, [isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoggedIn ? props.children : null\n  }, void 0, false);\n};\n_s(ProtectedRoute, \"ByRb0k4YO4RAgY8aI0kHhVwbeVA=\", false, function () {\n  return [useNavigate];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Route","useNavigate","Fragment","_Fragment","jsxDEV","_jsxDEV","ProtectedRoute","props","_s","navigate","isLoggedIn","setIsLoggedIn","checkUserToken","userToken","sessionStorage","getItem","returnUrl","children","_c","$RefreshReg$"],"sources":["D:/1 SAKSHI/projects/ikea project/ikea/src/Components/ProtectedRoute.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Route, useNavigate } from \"react-router-dom\";\r\n \r\nconst ProtectedRoute = (props) => {\r\n \r\n    const navigate = useNavigate();\r\n \r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n \r\n  function  checkUserToken()\r\n  {    \r\n        const userToken = sessionStorage.getItem('user-token');\r\n       \r\n        if (!userToken || userToken === 'undefined')\r\n        {\r\n            setIsLoggedIn(false);                \r\n            return navigate('/Login?returnUrl=' + props.returnUrl);\r\n           // return navigate('/Login');\r\n        }\r\n        setIsLoggedIn(true);\r\n    }\r\n \r\n    useEffect(() => {\r\n       // alert(props.returnUrl);      \r\n        checkUserToken();\r\n    }, [isLoggedIn]);\r\n \r\n    return (\r\n        <>\r\n            {\r\n                isLoggedIn ? props.children : null\r\n            }\r\n        </>\r\n    );\r\n}\r\n \r\nexport default ProtectedRoute;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE9B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAErD,SAAUa,cAAcA,CAAA,EACxB;IACM,MAAMC,SAAS,GAAGC,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC;IAEtD,IAAI,CAACF,SAAS,IAAIA,SAAS,KAAK,WAAW,EAC3C;MACIF,aAAa,CAAC,KAAK,CAAC;MACpB,OAAOF,QAAQ,CAAC,mBAAmB,GAAGF,KAAK,CAACS,SAAS,CAAC;MACvD;IACH;IACAL,aAAa,CAAC,IAAI,CAAC;EACvB;EAEAb,SAAS,CAAC,MAAM;IACb;IACCc,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC;EAEhB,oBACIL,OAAA,CAAAF,SAAA;IAAAc,QAAA,EAEQP,UAAU,GAAGH,KAAK,CAACU,QAAQ,GAAG;EAAI,gBAExC,CAAC;AAEX,CAAC;AAAAT,EAAA,CA/BKF,cAAc;EAAA,QAECL,WAAW;AAAA;AAAAiB,EAAA,GAF1BZ,cAAc;AAiCpB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}